// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data.validata.com.Context;

#nullable disable

namespace data.validata.com.Migrations
{
    [DbContext(typeof(ValidataDbContext))]
    partial class ValidataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Validata")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("data.validata.com.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Addess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnTimeStamp")
                        .HasColumnType("datetime2(3)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedTimeStamp")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperationSourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Pobox")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("OperationSourceId");

                    b.ToTable("Customer", "Validata");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("CustomerHistory", "Validata");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("data.validata.com.Entities.OperationSource", b =>
                {
                    b.Property<int>("OperationSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperationSourceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OperationSourceId");

                    b.ToTable("OperationSource", "Validata");

                    b.HasData(
                        new
                        {
                            OperationSourceId = 1,
                            Name = "Pre Defined"
                        },
                        new
                        {
                            OperationSourceId = 2,
                            Name = "Api"
                        },
                        new
                        {
                            OperationSourceId = 3,
                            Name = "Import"
                        });
                });

            modelBuilder.Entity("data.validata.com.Entities.Customer", b =>
                {
                    b.HasOne("data.validata.com.Entities.OperationSource", "OperationSource")
                        .WithMany()
                        .HasForeignKey("OperationSourceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OperationSource");
                });
#pragma warning restore 612, 618
        }
    }
}
